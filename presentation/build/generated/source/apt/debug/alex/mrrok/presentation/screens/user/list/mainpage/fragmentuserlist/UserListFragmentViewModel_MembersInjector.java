// Generated by Dagger (https://google.github.io/dagger).
package alex.mrrok.presentation.screens.user.list.mainpage.fragmentuserlist;

import alex.mrrok.domain.usecases.SearchUseCase;
import alex.mrrok.domain.usecases.UserListUseCase;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class UserListFragmentViewModel_MembersInjector
    implements MembersInjector<UserListFragmentViewModel> {
  private final Provider<UserListUseCase> userListUseCaseProvider;

  private final Provider<SearchUseCase> searchUseCaseProvider;

  public UserListFragmentViewModel_MembersInjector(
      Provider<UserListUseCase> userListUseCaseProvider,
      Provider<SearchUseCase> searchUseCaseProvider) {
    this.userListUseCaseProvider = userListUseCaseProvider;
    this.searchUseCaseProvider = searchUseCaseProvider;
  }

  public static MembersInjector<UserListFragmentViewModel> create(
      Provider<UserListUseCase> userListUseCaseProvider,
      Provider<SearchUseCase> searchUseCaseProvider) {
    return new UserListFragmentViewModel_MembersInjector(
        userListUseCaseProvider, searchUseCaseProvider);
  }

  @Override
  public void injectMembers(UserListFragmentViewModel instance) {
    injectUserListUseCase(instance, userListUseCaseProvider.get());
    injectSearchUseCase(instance, searchUseCaseProvider.get());
  }

  public static void injectUserListUseCase(
      UserListFragmentViewModel instance, UserListUseCase userListUseCase) {
    instance.userListUseCase = userListUseCase;
  }

  public static void injectSearchUseCase(
      UserListFragmentViewModel instance, SearchUseCase searchUseCase) {
    instance.searchUseCase = searchUseCase;
  }
}
