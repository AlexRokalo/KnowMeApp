// Generated by Dagger (https://google.github.io/dagger).
package alex.mrrok.presentation.screens.user.list.addnews;

import alex.mrrok.domain.usecases.LoadNewsUseCase;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class AddNewsViewModel_MembersInjector implements MembersInjector<AddNewsViewModel> {
  private final Provider<LoadNewsUseCase> loadNewsUseCaseProvider;

  public AddNewsViewModel_MembersInjector(Provider<LoadNewsUseCase> loadNewsUseCaseProvider) {
    this.loadNewsUseCaseProvider = loadNewsUseCaseProvider;
  }

  public static MembersInjector<AddNewsViewModel> create(
      Provider<LoadNewsUseCase> loadNewsUseCaseProvider) {
    return new AddNewsViewModel_MembersInjector(loadNewsUseCaseProvider);
  }

  @Override
  public void injectMembers(AddNewsViewModel instance) {
    injectLoadNewsUseCase(instance, loadNewsUseCaseProvider.get());
  }

  public static void injectLoadNewsUseCase(
      AddNewsViewModel instance, LoadNewsUseCase loadNewsUseCase) {
    instance.loadNewsUseCase = loadNewsUseCase;
  }
}
